{"version":3,"sources":["logo.svg","AxisBottom.js","AxisLeft.js","Marks.js","ColorLegend.js","App.js","useData.js","reportWebVitals.js","index.js"],"names":["AxisBottom","xScale","innerHeight","tickFormat","tickOffSet","ticks","map","tickValue","className","transform","y2","style","textAnchor","dy","y","AxisLeft","yScale","innerWidth","idx","x2","x","Marks","data","colorScale","xValue","yValue","colorValue","tooltipFormat","cirlceRadius","d","cx","cy","fill","r","ColorLegend","tickSpacing","tickSize","tickTextOffSet","onHover","fadeOpacity","useState","current","setCurrent","domain","domainValue","i","opacity","onMouseEnter","onMouseOut","margin","siFormat","format","xAxisTickFormat","replace","attributes","value","label","findLabel","length","App","setData","useEffect","csv","sepal_length","sepal_width","petal_length","petal_width","then","console","log","useData","hoveredValue","setHoveredValue","xAttribute","setXAttribute","xAxisLabel","yAttribute","setYAttribute","yAxisLabel","species","filteredData","filter","scaleLinear","extent","range","nice","scaleOrdinal","options","onChange","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49d5bbba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffSet = 3,\n}) => {\n  return xScale.ticks().map((tickValue) => (\n    <g\n      className=\"tick\"\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)},0)`}\n    >\n      <line y2={innerHeight} />\n      <text\n        style={{ textAnchor: \"middle\" }}\n        dy=\".71em\"\n        y={innerHeight + tickOffSet}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n};\n","export const AxisLeft = ({ yScale, innerWidth, tickOffSet = 3 }) => {\n  return yScale.ticks().map((tickValue, idx) => {\n    return (\n      <g\n        key={idx}\n        className=\"tick\"\n        transform={`translate(0,${yScale(tickValue)})`}\n      >\n        <line x2={innerWidth} />\n        <text\n          key={tickValue}\n          style={{ textAnchor: \"end\" }}\n          x={-tickOffSet}\n          dy=\".32em\"\n        >\n          {tickValue}\n        </text>\n      </g>\n    );\n  });\n};\n","export const Marks = ({\n  data,\n  xScale,\n  yScale,\n  colorScale,\n  xValue,\n  yValue,\n  colorValue,\n  tooltipFormat,\n  cirlceRadius,\n}) => {\n  return data.map((d, idx) => {\n    // console.log(d, idx);\n    return (\n      <circle\n        className=\"mark\"\n        key={idx}\n        cx={xScale(xValue(d))}\n        cy={yScale(yValue(d))}\n        fill={colorScale(colorValue(d))}\n        r={cirlceRadius}\n      >\n        <title>{tooltipFormat(xValue(d))}</title>\n      </circle>\n    );\n  });\n};\n","import { useState } from \"react\";\nexport const ColorLegend = ({\n  colorScale,\n  tickSpacing = 20,\n  tickSize = 10,\n  tickTextOffSet = 15,\n  onHover,\n  fadeOpacity = 0.2,\n}) => {\n  const [current, setCurrent] = useState(null);\n\n  return (\n    <g>\n      {colorScale.domain().map((domainValue, i) => {\n        return (\n          <g\n            opacity={current && current !== domainValue ? fadeOpacity : 1}\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${i * tickSpacing})`}\n            onMouseEnter={() => {\n              setCurrent(domainValue);\n              onHover(domainValue);\n            }}\n            onMouseOut={() => {\n              setCurrent(null);\n              onHover(null);\n            }}\n          >\n            <circle fill={colorScale(domainValue)} r={tickSize}></circle>\n            <text x={tickTextOffSet} dy=\".32em\">\n              {domainValue}{\" \"}\n            </text>\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\n//Empty component\n// export const ColorLegend = () => {\n//     return <div></div>;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  format,\n  scaleBand,\n  scaleLinear,\n  max,\n  axisBottom,\n  extent,\n  scaleOrdinal,\n} from \"d3\";\nimport ReactDropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { useData } from \"./useData\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\nimport { Dropdown } from \"./Dropdown\";\nimport { useState } from \"react\";\nimport { ColorLegend } from \"./ColorLegend\";\n\nconst width = 1000;\nconst menuHeight = 0;\nconst height = 500 - menuHeight;\nconst margin = { top: 20, right: 300, bottom: 60, left: 150 };\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 40;\nconst siFormat = format(\".2s\");\nconst xAxisTickFormat = (tickValue) => siFormat(tickValue).replace(\"G\", \"B\");\nconst attributes = [\n  { value: \"sepal_length\", label: \"Sepal length\" },\n  { value: \"sepal_width\", label: \"Sepal width\" },\n  { value: \"petal_length\", label: \"Petal length\" },\n  { value: \"petal_width\", label: \"Petal Width\" },\n  { value: \"species\", label: \"Species\" },\n];\n\nconst findLabel = (value) => {\n  for (let i = 0; i < attributes.length; i++) {\n    if (value === attributes[i].value) return attributes[i].label;\n  }\n  return \"unknown\";\n};\n\nfunction App() {\n  const data = useData();\n\n  const [hoveredValue, setHoveredValue] = useState(null);\n  console.log(hoveredValue);\n\n  const cirlceRadius = 7;\n\n  const initialXAttribute = \"petal_length\";\n  const [xAttribute, setXAttribute] = useState(initialXAttribute);\n  const xValue = (d) => d[xAttribute];\n  const xAxisLabel = findLabel(xAttribute);\n\n  const initialYAttribute = \"sepal_width\";\n  const [yAttribute, setYAttribute] = useState(initialYAttribute);\n  const yValue = (d) => d[yAttribute];\n  const yAxisLabel = findLabel(yAttribute);\n\n  const colorValue = (d) => d.species;\n\n  const colorLegendLabel = \"Species\";\n\n  const fadeOpacity = 0.2;\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.left;\n\n  if (!data) {\n    return <pre>Loading... </pre>;\n  }\n\n  const filteredData = data.filter((d) => hoveredValue === colorValue(d));\n\n  const xScale = scaleLinear()\n    .domain(extent(data, xValue))\n    .range([0, innerWidth])\n    .nice();\n\n  const yScale = scaleLinear()\n    .domain(extent(data, yValue))\n    .range([0, innerHeight]);\n\n  const colorScale = scaleOrdinal()\n    .domain(data.map(colorValue))\n    .range([\"#E6842A\", \"#137B80\", \"#8E6C8A\"]);\n\n  // function findLabel(value) {\n  //   const foundItems = attributes.filter((x) => x.value === value);\n  //   if (foundItems && foundItems.length == 1) {\n  //     return foundItems[0].label;\n  //   }\n  //    return \"unknown\";\n  //  }\n\n  return (\n    <>\n      <div className=\"menus-container\">\n        <span className=\"dropdown-label\">X-axis:</span>\n        <ReactDropdown\n          options={attributes}\n          value={xAttribute}\n          onChange={({ value }) => setXAttribute(value)}\n        />\n        <span className=\"dropdown-label\">Y-axis:</span>\n        <ReactDropdown\n          options={attributes}\n          value={yAttribute}\n          onChange={({ value }) => setYAttribute(value)}\n        />\n      </div>\n\n      <svg width={width} height={height}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <AxisBottom\n            xScale={xScale}\n            innerHeight={innerHeight}\n            tickFormat={xAxisTickFormat}\n            tickOffSet={5}\n          ></AxisBottom>\n          <AxisLeft\n            yScale={yScale}\n            innerWidth={innerWidth}\n            tickOffSet={5}\n          ></AxisLeft>\n          <text\n            className=\"axis-label\"\n            x={innerWidth / 2}\n            textAnchor=\"middle\"\n            y={innerHeight + xAxisLabelOffset}\n          >\n            {xAxisLabel}\n          </text>\n          <text\n            className=\"axis-label\"\n            textAnchor=\"middle\"\n            transform={`translate(${-yAxisLabelOffset},${\n              innerHeight / 2\n            }) rotate(-90) `}\n          >\n            {yAxisLabel}\n          </text>\n          <g transform={`translate(${innerWidth + 60},60)`}>\n            <text className=\"axis-label\" textAnchor=\"middle\" x={35} y={-30}>\n              {colorLegendLabel}\n            </text>\n            <ColorLegend\n              onHover={setHoveredValue}\n              colorScale={colorScale}\n              tickSize={cirlceRadius}\n              fadeOpacity={fadeOpacity}\n            ></ColorLegend>\n          </g>\n          <g opacity={hoveredValue ? fadeOpacity : 1}>\n            <Marks\n              data={data}\n              xScale={xScale}\n              yScale={yScale}\n              colorScale={colorScale}\n              xValue={xValue}\n              yValue={yValue}\n              colorValue={colorValue}\n              tooltipFormat={xAxisTickFormat}\n              cirlceRadius={cirlceRadius}\n            ></Marks>\n          </g>\n          <Marks\n            data={filteredData}\n            xScale={xScale}\n            yScale={yScale}\n            colorScale={colorScale}\n            xValue={xValue}\n            yValue={yValue}\n            colorValue={colorValue}\n            tooltipFormat={xAxisTickFormat}\n            cirlceRadius={cirlceRadius}\n          ></Marks>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nconst csvUrl =\n  \"https://gist.githubusercontent.com/curran/a08a1080b88344b0c8a7/raw/639388c2cbc2120a14dcf466e85730eb8be498bb/iris.csv\";\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const row = (d) => {\n      d.sepal_length = +d.sepal_length;\n      d.sepal_width = +d.sepal_width;\n      d.petal_length = +d.petal_length;\n      d.petal_width = +d.petal_width;\n      return d;\n    };\n    csv(csvUrl, row).then((data) => {\n      console.log(data[0]);\n      setData(data);\n    });\n  }, []);\n  return data;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}